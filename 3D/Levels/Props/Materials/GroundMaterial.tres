[gd_resource type="ShaderMaterial" load_steps=30 format=2]

[ext_resource path="res://3D/Levels/Props/Materials/Textures/leafy-grass2-bl/leafy-grass2-albedo.png" type="Texture" id=1]
[ext_resource path="res://3D/Levels/Props/Materials/Textures/leafy-grass2-bl/leafy-grass2-ao.png" type="Texture" id=2]
[ext_resource path="res://3D/Levels/Props/Materials/Textures/leafy-grass2-bl/leafy-grass2-metallic.png" type="Texture" id=3]
[ext_resource path="res://3D/Levels/Props/Materials/Textures/leafy-grass2-bl/leafy-grass2-normal-ogl.png" type="Texture" id=4]
[ext_resource path="res://3D/Levels/Props/Materials/Textures/leafy-grass2-bl/leafy-grass2-roughness.png" type="Texture" id=5]

[sub_resource type="VisualShaderNodeVectorOp" id=1]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=2]
uniform_name = "ScalarUniform"

[sub_resource type="VisualShaderNodeColorUniform" id=3]
uniform_name = "Color_1"

[sub_resource type="VisualShaderNodeVectorOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=5]
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=6]
uniform_name = "Color_2"

[sub_resource type="VisualShaderNodeVectorOp" id=7]

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = ExtResource( 1 )
texture_type = 1

[sub_resource type="VisualShaderNodeVectorCompose" id=9]

[sub_resource type="VisualShaderNodeVectorOp" id=10]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 4

[sub_resource type="VisualShaderNodeVectorOp" id=12]
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 0, 0, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=14]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeTexture" id=15]
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=16]
texture = ExtResource( 5 )

[sub_resource type="VisualShaderNodeScalarOp" id=17]

[sub_resource type="VisualShaderNodeScalarFunc" id=18]
function = 14

[sub_resource type="VisualShaderNodeScalarFunc" id=19]
function = 14

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id=21]

[sub_resource type="VisualShaderNodeInput" id=22]
input_name = "camera"

[sub_resource type="VisualShaderNodeVectorDecompose" id=23]

[sub_resource type="VisualShader" id=24]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float ScalarUniform;
uniform sampler2D tex_frg_17 : hint_albedo;
uniform vec4 Color_1 : hint_color;
uniform vec4 Color_2 : hint_color;
uniform sampler2D tex_frg_22;
uniform sampler2D tex_frg_24;
uniform sampler2D tex_frg_21;
uniform sampler2D tex_frg_23;



void vertex() {
// Output:0

}

void fragment() {
// Input:8
	mat4 n_out8p0 = CAMERA_MATRIX;

// Input:6
	vec3 n_out6p0 = VERTEX;

// TransformVectorMult:7
	vec3 n_out7p0 = (n_out8p0 * vec4(n_out6p0, 1.0)).xyz;

// ScalarUniform:11
	float n_out11p0 = ScalarUniform;

// VectorOp:10
	vec3 n_out10p0 = n_out7p0 * vec3(n_out11p0);

// VectorDecompose:9
	float n_out9p0 = n_out10p0.x;
	float n_out9p1 = n_out10p0.y;
	float n_out9p2 = n_out10p0.z;

// VectorCompose:18
	float n_in18p2 = 0.00000;
	vec3 n_out18p0 = vec3(n_out9p0, n_out9p2, n_in18p2);

// Texture:17
	vec4 tex_frg_17_read = texture(tex_frg_17, n_out18p0.xy);
	vec3 n_out17p0 = tex_frg_17_read.rgb;
	float n_out17p1 = tex_frg_17_read.a;

// ColorUniform:12
	vec3 n_out12p0 = Color_1.rgb;
	float n_out12p1 = Color_1.a;

// ScalarFunc:4
	float n_out4p0 = floor(n_out9p0);

// ScalarFunc:5
	float n_out5p0 = floor(n_out9p2);

// ScalarOp:3
	float n_out3p0 = n_out4p0 + n_out5p0;

// ScalarOp:2
	float n_in2p1 = 2.00000;
	float n_out2p0 = mod(n_out3p0, n_in2p1);

// VectorOp:13
	vec3 n_out13p0 = n_out12p0 * vec3(n_out2p0);

// VectorOp:20
	vec3 n_in20p0 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out20p0 = n_in20p0 - vec3(n_out2p0);

// ColorUniform:15
	vec3 n_out15p0 = Color_2.rgb;
	float n_out15p1 = Color_2.a;

// VectorOp:14
	vec3 n_out14p0 = n_out20p0 * n_out15p0;

// VectorOp:16
	vec3 n_out16p0 = n_out13p0 + n_out14p0;

// VectorOp:19
	vec3 n_out19p0 = n_out17p0 * n_out16p0;

// Texture:22
	vec4 tex_frg_22_read = texture(tex_frg_22, n_out18p0.xy);
	vec3 n_out22p0 = tex_frg_22_read.rgb;
	float n_out22p1 = tex_frg_22_read.a;

// Texture:24
	vec4 tex_frg_24_read = texture(tex_frg_24, n_out18p0.xy);
	vec3 n_out24p0 = tex_frg_24_read.rgb;
	float n_out24p1 = tex_frg_24_read.a;

// Texture:21
	vec4 tex_frg_21_read = texture(tex_frg_21, n_out18p0.xy);
	vec3 n_out21p0 = tex_frg_21_read.rgb;
	float n_out21p1 = tex_frg_21_read.a;

// Texture:23
	vec4 tex_frg_23_read = texture(tex_frg_23, n_out18p0.xy);
	vec3 n_out23p0 = tex_frg_23_read.rgb;
	float n_out23p1 = tex_frg_23_read.a;

// Output:0
	ALBEDO = n_out19p0;
	METALLIC = dot(n_out22p0, vec3(0.333333, 0.333333, 0.333333));
	ROUGHNESS = dot(n_out24p0, vec3(0.333333, 0.333333, 0.333333));
	AO = dot(n_out21p0, vec3(0.333333, 0.333333, 0.333333));
	NORMALMAP = n_out23p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 437.538, -15.9961 )
nodes/fragment/0/position = Vector2( 1220, 160 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( 220, 240 )
nodes/fragment/3/node = SubResource( 17 )
nodes/fragment/3/position = Vector2( 0, 240 )
nodes/fragment/4/node = SubResource( 18 )
nodes/fragment/4/position = Vector2( -220, 240 )
nodes/fragment/5/node = SubResource( 19 )
nodes/fragment/5/position = Vector2( -220, 300 )
nodes/fragment/6/node = SubResource( 20 )
nodes/fragment/6/position = Vector2( -1140, 300 )
nodes/fragment/7/node = SubResource( 21 )
nodes/fragment/7/position = Vector2( -940, 220 )
nodes/fragment/8/node = SubResource( 22 )
nodes/fragment/8/position = Vector2( -1120, 220 )
nodes/fragment/9/node = SubResource( 23 )
nodes/fragment/9/position = Vector2( -460, 240 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -660, 240 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -860, 340 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 220, 140 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 440, 140 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 620, 340 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 220, 360 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( 780, 200 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( 340, -100 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( -60, 480 )
nodes/fragment/19/node = SubResource( 10 )
nodes/fragment/19/position = Vector2( 940, 140 )
nodes/fragment/20/node = SubResource( 12 )
nodes/fragment/20/position = Vector2( 420, 260 )
nodes/fragment/21/node = SubResource( 13 )
nodes/fragment/21/position = Vector2( 940, 560 )
nodes/fragment/22/node = SubResource( 14 )
nodes/fragment/22/position = Vector2( 940, 280 )
nodes/fragment/23/node = SubResource( 15 )
nodes/fragment/23/position = Vector2( 740, 440 )
nodes/fragment/24/node = SubResource( 16 )
nodes/fragment/24/position = Vector2( 720, 660 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 4, 0, 3, 0, 5, 0, 3, 1, 6, 0, 7, 1, 8, 0, 7, 0, 9, 0, 4, 0, 9, 2, 5, 0, 7, 0, 10, 0, 10, 0, 9, 0, 11, 0, 10, 1, 12, 0, 13, 0, 2, 0, 13, 1, 15, 0, 14, 1, 13, 0, 16, 0, 9, 0, 18, 0, 9, 2, 18, 1, 18, 0, 17, 0, 17, 0, 19, 0, 16, 0, 19, 1, 19, 0, 0, 0, 2, 0, 20, 1, 20, 0, 14, 0, 14, 0, 16, 1, 22, 0, 0, 2, 23, 0, 0, 8, 21, 0, 0, 6, 24, 0, 0, 3, 18, 0, 22, 0, 18, 0, 23, 0, 18, 0, 24, 0, 18, 0, 21, 0 )

[resource]
shader = SubResource( 24 )
shader_param/ScalarUniform = 1.141
shader_param/Color_1 = Color( 1, 1, 1, 1 )
shader_param/Color_2 = Color( 0.803922, 0.803922, 0.803922, 1 )
